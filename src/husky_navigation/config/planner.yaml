controller_frequency: 5.0 # 向底盘控制移动话题 cmd_vel 发送命令的频率
recovery_behaviour_enabled: true

NavfnROS:
  # 是否允许规划器规划穿过未知区域的路径，只设计该参数为true还不行，还要设置track_unkown_space参数也为true才行
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  # 当设置的目的地被障碍物占据时，需要以该参数为半径找到最近的点作为新的目标地点
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.

TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5 # x方向的加速度绝对值
  acc_lim_theta:  3.2 # 旋转加速度的绝对值

  max_vel_x: 1.0 # x方向最大速度的绝对值
  min_vel_x: 0.0 # x方向最小速度绝对值，如果为负值表示后退

  max_vel_theta: 1.0 # 最大旋转速度的绝对值
  min_vel_theta: -1.0 # 最小旋转速度的绝对值
  min_in_place_vel_theta: 0.2 # 原地最大角速度

  holonomic_robot: false # 是否为全向机器人
  escape_vel: -0.1 # 逃逸速度，必须是负值，这个速度可以理解为机器人陷入死胡同的回退速度

  # Goal Tolerance Parameters
  # 目标精度，实际肯定不可能以点为精度，到达目标某个范围内视做到达目标
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  # 一般都为 false， 为true时表示当进入xy_goal_tolerance范围内会设置一个锁，此后即使旋转调整
  # yaw的过程中跳出xy_goal_tolerance ，也不会进行xy上的调整
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 2.0 # 前向仿真时间
  sim_granularity: 0.02 # 前向仿真时间步长
  angular_sim_granularity: 0.02 # 角速度前向步长
  # 速度采样数
  vx_samples: 6
  vtheta_samples: 20
  # 控制器更新频率，一般设为3～5之间，越高对计算机负载要求越高
  controller_frequency: 20.0

  # Trajectory scoring parameters
  # 计算系数时统一 pdist_scale,gdist_scale的单位为米，一般都是true ,false时单位为cells
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  # 避障系数
  occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  # path和goal的权重，前者大更靠近全局路径，后者大更靠近全局目标
  pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  # 对不同的旋转角，最多向前看几米
  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  # 对不同的轨迹，每次前向仿真时间步长
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  # 是否发布计算后的cost话题
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1

DWAPlannerROS:
  # Robot configuration parameters  
  acc_lim_x: 2.5
  acc_lim_y: 0
  acc_lim_th: 3.2

  max_vel_x: 0.5
  min_vel_x: 0.0
  max_vel_y: 0
  min_vel_y: 0

  max_vel_trans: 0.5
  min_vel_trans: 0.1
  max_vel_rot: 1.0
  min_vel_rot: 0.2

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # # Forward Simulation Parameters
  # sim_time: 2.0
  # sim_granularity: 0.02
  # vx_samples: 6
  # vy_samples: 0
  # vtheta_samples: 20
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  # path_distance_bias: 32.0 # The weighting for how much the controller should stay close to the path it was given
  # goal_distance_bias: 24.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  # occdist_scale: 0.01 # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 0.325 # The distance from the center point of the robot to place an additional scoring point, in meters
  # stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  # oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)